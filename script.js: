document.getElementById('convertBtn').addEventListener('click', function() {
    const inputCode = document.getElementById('inputCode').value;
    const inputLang = document.getElementById('inputLang').value;
    const outputLang = document.getElementById('outputLang').value;

    if (inputCode.trim() === '') {
        alert('Please enter code to convert.');
        return;
    }

    document.getElementById('loading').classList.remove('hidden');

    setTimeout(() => {
        const outputCode = convertCode(inputCode, inputLang, outputLang);
        document.getElementById('outputCode').value = outputCode;
        document.getElementById('loading').classList.add('hidden');
    }, 1000);
});

function convertCode(inputCode, inputLang, outputLang) {
    // Basic conversion logic (extend this with real translations)
    if (inputLang === 'python' && outputLang === 'html') {
        return `<html>\n<head>\n<title>Converted Python</title>\n</head>\n<body>\n<pre>${inputCode}</pre>\n</body>\n</html>`;
    } else if (inputLang === 'html' && outputLang === 'python') {
        return `# Converted HTML to Python:\nhtml_code = """\n${inputCode}\n"""`;
    } else if (inputLang === 'javascript' && outputLang === 'python') {
        return `# JavaScript to Python conversion:\nfunction myFunction() {\n${inputCode}\n}`;
    } else if (inputLang === 'python' && outputLang === 'javascript') {
        return `// Converted Python to JavaScript:\nlet result = \`${inputCode}\`;`;
    } else {
        return `# Conversion from ${inputLang} to ${outputLang} not yet supported.`;
    }
}

// Settings functionality
document.getElementById('animationToggle').addEventListener('change', function() {
    const areas = document.querySelectorAll('.code-input, .code-output');
    if (this.checked) {
        areas.forEach(area => area.classList.add('animated'));
    } else {
        areas.forEach(area => area.classList.remove('animated'));
    }
});

document.getElementById('textboxColor').addEventListener('input', function() {
    const areas = document.querySelectorAll('.code-input, .code-output');
    areas.forEach(area => area.style.backgroundColor = this.value);
});

document.getElementById('textboxBorderColor').addEventListener('input', function() {
    const areas = document.querySelectorAll('.code-input, .code-output');
    areas.forEach(area => {
        area.style.borderColor = this.value;
        area.style.boxShadow = `0 0 10px ${this.value}`;
    });
});

document.getElementById('fontSize').addEventListener('input', function() {
    const areas = document.querySelectorAll('.code-input, .code-output');
    areas.forEach(area => area.style.fontSize = `${this.value}px`);
});

document.getElementById('themeSelect').addEventListener('change', function() {
    const theme = this.value;
    if (theme === 'dark') {
        document.body.style.backgroundColor = '#121212';
        document.body.style.color = '#fff';
    } else if (theme === 'light') {
        document.body.style.backgroundColor = '#f0f0f0';
        document.body.style.color = '#000';
    } else if (theme === 'blue') {
        document.body.style.backgroundColor = '#003366';
        document.body.style.color = '#fff';
    } else if (theme === 'green') {
        document.body.style.backgroundColor = '#004d00';
        document.body.style.color = '#fff';
    }
});
